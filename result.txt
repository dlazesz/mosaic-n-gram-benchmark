Starting measurements: AWK (recursive) 3-gram, fixed-length fields, padding 10 000 lines
real: 0,980000
user: 0,966660
sys : 0,010000
Starting measurements: AWK (recursive) 3-gram, variable-length fields, padding 10 000 lines
real: 1,013330
user: 1,003330
sys : 0,006660
Starting measurements: AWK (recursive) 5-gram, fixed-length fields, padding words 1 000 lines
real: 0,783330
user: 0,780000
sys : 0,006660
Starting measurements: AWK (recursive) 5-gram, variable-length fields, padding 1 000 lines
real: 0,840000
user: 0,836660
sys : 0,003330
Starting measurements: AWK (iterative) 3-gram, fixed-length fields, padding 10 000 lines
real: 3,850000
user: 3,840000
sys : 0,006660
Starting measurements: AWK (iterative) 3-gram, variable-length fields, padding 10 000 lines
real: 3,950000
user: 3,936660
sys : 0,006660
Starting measurements: AWK (iterative) 5-gram, fixed-length fields, padding words 1 000 lines
real: 4,126660
user: 4,120000
sys : 0,006660
Starting measurements: AWK (iterative) 5-gram, variable-length fields, padding 1 000 lines
real: 4,526660
user: 4,520000
sys : 0,006660
Starting measurements: PERL (iterative) 3-gram, fixed-length fields, padding 10 000 lines
real: 6,370000
user: 6,353330
sys : 0,033330
Starting measurements: PERL (iterative) 3-gram, variable-length fields, padding 10 000 lines
real: 6,393330
user: 6,380000
sys : 0,030000
Starting measurements: PERL (iterative) 5-gram, fixed-length fields, padding words 1 000 lines
real: 5,796660
user: 5,773330
sys : 0,026660
Starting measurements: PERL (iterative) 5-gram, variable-length fields, padding 1 000 lines
real: 6,246660
user: 6,220000
sys : 0,030000
Starting measurements: time python var-algs 3-gram, fixed-length fields, padding 10 000 lines

RUNNING TIME

Product: 1.6021973767 (1.6004652690, 1.6037671060, 1.6023597550)
CProduct: 2.0099592850 (2.0100295880, 2.0059507980, 2.0138974690)
CProduct2: 2.0088668957 (2.0106635980, 2.0065010780, 2.0094360110)
Recursive: 2.7959526490 (2.7958378620, 2.7972901130, 2.7947299720)
Iter (list in).: 4.3024554080 (4.3088256600, 4.2963075870, 4.3022329770)
Iter (list out).: 4.2636636307 (4.2669242780, 4.2617861800, 4.2622804340)

Starting measurements: time python var-algs 3-gram, variable-length fields, padding 10 000 lines

RUNNING TIME

Product: 1.6388173870 (1.6304058270, 1.6421972980, 1.6438490360)
CProduct: 2.0572398927 (2.0563033490, 2.0546798770, 2.0607364520)
CProduct2: 2.0626526410 (2.0660844820, 2.0632024230, 2.0586710180)
Recursive: 2.8293306680 (2.8314816950, 2.8276436500, 2.8288666590)
Iter (list in).: 4.3667263490 (4.3773948040, 4.3555614970, 4.3672227460)
Iter (list out).: 4.3372683823 (4.3352602510, 4.3427489100, 4.3337959860)

Starting measurements: time python var-algs 5-gram, fixed-length fields, padding 1 000 lines

RUNNING TIME

Product: 1.2986605210 (1.2971028980, 1.2997404110, 1.2991382540)
CProduct: 1.6011212613 (1.6015120250, 1.6004023260, 1.6014494330)
CProduct2: 1.6022247723 (1.6021333600, 1.6034902590, 1.6010506980)
Recursive: 2.3000507403 (2.3005263460, 2.2979960420, 2.3016298330)
Iter (list in).: 3.9446966113 (3.9539115870, 3.9401184060, 3.9400598410)
Iter (list out).: 3.9358649437 (3.9338506720, 3.9378178230, 3.9359263360)

Starting measurements: time python var-algs 5-gram, variable-length fields, padding 1 000 lines

RUNNING TIME

Product: 1.3996020760 (1.3971814090, 1.4047609600, 1.3968638590)
CProduct: 1.7627292163 (1.7662169750, 1.7629992330, 1.7589714410)
CProduct2: 1.7599330983 (1.7599792950, 1.7584672090, 1.7613527910)
Recursive: 2.4790574753 (2.4766198190, 2.4834088110, 2.4771437960)
Iter (list in).: 4.2519047483 (4.2597223160, 4.2513902840, 4.2446016450)
Iter (list out).: 4.2782739060 (4.2870334900, 4.2721120760, 4.2756761520)

Starting measurements: time python fix-algs 3-gram, fixed-length fields, padding 10 000 lines

RUNNING TIME

Iter. fixed: 4.2554346447 (4.2597039410, 4.2534848710, 4.2531151220)
Iter. fixed2: 4.2087937143 (4.2046274760, 4.2078907690, 4.2138628980)

Starting measurements: time python fix-algs 5-gram, fixed-length fields, padding 1 000 lines

RUNNING TIME

Iter. fixed: 4.5525818237 (4.5609050530, 4.5517090720, 4.5451313460)
Iter. fixed2: 4.5331077010 (4.5389508890, 4.5309126380, 4.5294595760)

Starting measurements: time python init time no-padding

INIT TIME

readbywords_wo_padding 0.0001353837 (0.0001618640, 0.0001244470, 0.0001198400)
Starting measurements: time python init time padding

INIT TIME

readbywords_w_padding 0.0001367530 (0.0001667490, 0.0001226180, 0.0001208920)
Starting measurements: mem python var-algs 3-gram, fixed-length fields, padding 10 000 lines

MEMORY USAGE

Product:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.4 MiB     23.4 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.2 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct2:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Recursive:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list in).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list out).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Starting measurements: mem python var-algs 3-gram, variable-length fields, padding 10 000 lines

MEMORY USAGE

Product:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.4 MiB     23.4 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.2 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct2:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Recursive:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list in).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.8 MiB      0.1 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list out).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.8 MiB     23.8 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.8 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Starting measurements: mem python var-algs 5-gram, fixed-length fields, padding 1 000 lines

MEMORY USAGE

Product:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.5 MiB     23.5 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.1 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct2:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Recursive:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list in).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.7 MiB      0.1 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list out).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.7 MiB     23.7 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.9 MiB      0.1 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Starting measurements: mem python var-algs 5-gram, variable-length fields, padding 1 000 lines

MEMORY USAGE

Product:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.5 MiB     23.5 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.5 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.5 MiB     23.5 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     24.0 MiB      0.5 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct2:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     24.0 MiB     24.0 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     24.0 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Recursive:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     24.0 MiB     24.0 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     24.0 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list in).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     24.0 MiB     24.0 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     24.0 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list out).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     24.0 MiB     24.0 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     24.1 MiB      0.1 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Starting measurements: mem python fix-algs 3-gram, fixed-length fields, padding 10 000 lines

MEMORY USAGE

Iter. fixed:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.4 MiB     23.4 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.8 MiB      0.4 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter. fixed2:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.8 MiB     23.8 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.8 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Starting measurements: mem python fix-algs 5-gram, fixed-length fields, padding 1 000 lines

MEMORY USAGE

Iter. fixed:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.5 MiB     23.5 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.9 MiB      0.4 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter. fixed2:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.9 MiB     23.9 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.9 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


