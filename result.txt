Compile: C (recursive)
Starting measurements: C (recursive) 3-gram, fixed-length fields, padding 10 000 lines
real: 0,236660
user: 0,230000
sys : 0,013330
Starting measurements: C (recursive) 3-gram, variable-length fields, padding 10 000 lines
real: 0,250000
user: 0,246660
sys : 0,010000
Starting measurements: C (recursive) 5-gram, fixed-length fields, padding words 1 000 lines
real: 0,153330
user: 0,146660
sys : 0,010000
Starting measurements: C (recursive) 5-gram, variable-length fields, padding 1 000 lines
real: 0,170000
user: 0,163330
sys : 0,006660
Compile: C (iterative)
Starting measurements: C (iterative) 3-gram, fixed-length fields, padding 10 000 lines
real: 0,283330
user: 0,280000
sys : 0,010000
Starting measurements: C (iterative) 3-gram, variable-length fields, padding 10 000 lines
real: 0,293330
user: 0,290000
sys : 0,010000
Starting measurements: C (iterative) 5-gram, fixed-length fields, padding words 1 000 lines
real: 0,196660
user: 0,186660
sys : 0,013330
Starting measurements: C (iterative) 5-gram, variable-length fields, padding 1 000 lines
real: 0,220000
user: 0,213330
sys : 0,010000
Compile: C (iterative2)
Starting measurements: C (iterative2) 3-gram, fixed-length fields, padding 10 000 lines
real: 0,243330
user: 0,240000
sys : 0,010000
Starting measurements: C (iterative2) 3-gram, variable-length fields, padding 10 000 lines
real: 0,253330
user: 0,246660
sys : 0,013330
Starting measurements: C (iterative2) 5-gram, fixed-length fields, padding words 1 000 lines
real: 0,236660
user: 0,230000
sys : 0,010000
Starting measurements: C (iterative2) 5-gram, variable-length fields, padding 1 000 lines
real: 0,246660
user: 0,243330
sys : 0,006660
Compile: C (iterative3)
Starting measurements: C (iterative3) 3-gram, fixed-length fields, padding 10 000 lines
real: 0,123330
user: 0,123330
sys : 0,003330
Starting measurements: C (iterative3) 3-gram, variable-length fields, padding 10 000 lines
real: 0,133330
user: 0,130000
sys : 0,006660
Starting measurements: C (iterative3) 5-gram, fixed-length fields, padding words 1 000 lines
real: 0,080000
user: 0,080000
sys : 0,006660
Starting measurements: C (iterative3) 5-gram, variable-length fields, padding 1 000 lines
real: 0,090000
user: 0,090000
sys : 0,003330
Starting measurements: AWK (recursive) 3-gram, fixed-length fields, padding 10 000 lines
real: 0,983330
user: 0,970000
sys : 0,010000
Starting measurements: AWK (recursive) 3-gram, variable-length fields, padding 10 000 lines
real: 1,013330
user: 1,006660
sys : 0,006660
Starting measurements: AWK (recursive) 5-gram, fixed-length fields, padding words 1 000 lines
real: 0,783330
user: 0,776660
sys : 0,006660
Starting measurements: AWK (recursive) 5-gram, variable-length fields, padding 1 000 lines
real: 0,843330
user: 0,833330
sys : 0,006660
Starting measurements: AWK (iterative) 3-gram, fixed-length fields, padding 10 000 lines
real: 3,853330
user: 3,840000
sys : 0,010000
Starting measurements: AWK (iterative) 3-gram, variable-length fields, padding 10 000 lines
real: 3,963330
user: 3,950000
sys : 0,010000
Starting measurements: AWK (iterative) 5-gram, fixed-length fields, padding words 1 000 lines
real: 4,123330
user: 4,116660
sys : 0,006660
Starting measurements: AWK (iterative) 5-gram, variable-length fields, padding 1 000 lines
real: 4,543330
user: 4,533330
sys : 0,006660
Starting measurements: PERL (iterative) 3-gram, fixed-length fields, padding 10 000 lines
real: 6,373330
user: 6,353330
sys : 0,036660
Starting measurements: PERL (iterative) 3-gram, variable-length fields, padding 10 000 lines
real: 6,420000
user: 6,400000
sys : 0,036660
Starting measurements: PERL (iterative) 5-gram, fixed-length fields, padding words 1 000 lines
real: 5,810000
user: 5,790000
sys : 0,023330
Starting measurements: PERL (iterative) 5-gram, variable-length fields, padding 1 000 lines
real: 6,256660
user: 6,230000
sys : 0,030000
Starting measurements: time python var-algs 3-gram, fixed-length fields, padding 10 000 lines

RUNNING TIME

Product: 1.6113148513 (1.6075573850, 1.6125831070, 1.6138040620)
CProduct: 2.0024053210 (2.0013476280, 2.0016614430, 2.0042068920)
CProduct2: 2.0070031563 (2.0085919330, 2.0062471290, 2.0061704070)
Recursive: 2.7984314000 (2.8000286620, 2.7971906650, 2.7980748730)
Iter (list in).: 4.2795979117 (4.2867897190, 4.2776843100, 4.2743197060)
Iter (list out).: 4.2219692243 (4.2216918640, 4.2236148720, 4.2206009370)

Starting measurements: time python var-algs 3-gram, variable-length fields, padding 10 000 lines

RUNNING TIME

Product: 1.6332116713 (1.6262096310, 1.6363574590, 1.6370679240)
CProduct: 2.0158600290 (2.0158841950, 2.0156996090, 2.0159962830)
CProduct2: 2.0132732727 (2.0129815960, 2.0141554830, 2.0126827390)
Recursive: 2.7961473987 (2.7964630590, 2.7961530940, 2.7958260430)
Iter (list in).: 4.3219239940 (4.3277697230, 4.3231625710, 4.3148396880)
Iter (list out).: 4.3089592210 (4.3080661510, 4.3073279660, 4.3114835460)

Starting measurements: time python var-algs 5-gram, fixed-length fields, padding 1 000 lines

RUNNING TIME

Product: 1.2974860027 (1.2947203580, 1.3005483610, 1.2971892890)
CProduct: 1.6109584567 (1.6112907660, 1.6112762630, 1.6103083410)
CProduct2: 1.6155053683 (1.6138271340, 1.6196363330, 1.6130526380)
Recursive: 2.3174520407 (2.3161484480, 2.3202730280, 2.3159346460)
Iter (list in).: 3.9479515450 (3.9554393720, 3.9428457810, 3.9455694820)
Iter (list out).: 3.9464433407 (3.9494463710, 3.9390064060, 3.9508772450)

Starting measurements: time python var-algs 5-gram, variable-length fields, padding 1 000 lines

RUNNING TIME

Product: 1.3981086367 (1.3972797270, 1.4022666380, 1.3947795450)
CProduct: 1.7567144797 (1.7577737160, 1.7570585480, 1.7553111750)
CProduct2: 1.7523379577 (1.7521845560, 1.7519741430, 1.7528551740)
Recursive: 2.4820819643 (2.4780525440, 2.4848948790, 2.4832984700)
Iter (list in).: 4.2525524957 (4.2592947080, 4.2506282160, 4.2477345630)
Iter (list out).: 4.2748876833 (4.2714555580, 4.2761835520, 4.2770239400)

Starting measurements: time python fix-algs 3-gram, fixed-length fields, padding 10 000 lines

RUNNING TIME

Iter. fixed: 4.2557762060 (4.2603227300, 4.2515964700, 4.2554094180)
Iter. fixed2: 4.2023631997 (4.2009507290, 4.2045527900, 4.2015860800)

Starting measurements: time python fix-algs 5-gram, fixed-length fields, padding 1 000 lines

RUNNING TIME

Iter. fixed: 4.5520762750 (4.5565507790, 4.5522696540, 4.5474083920)
Iter. fixed2: 4.5394249790 (4.5392428360, 4.5419245650, 4.5371075360)

Starting measurements: time python init time no-padding

INIT TIME

readbywords_wo_padding 0.0001358590 (0.0001666450, 0.0001213600, 0.0001195720)
Starting measurements: time python init time padding

INIT TIME

readbywords_w_padding 0.0001341403 (0.0001631600, 0.0001198320, 0.0001194290)
Starting measurements: mem python var-algs 3-gram, fixed-length fields, padding 10 000 lines

MEMORY USAGE

Product:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.4 MiB     23.4 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.2 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct2:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Recursive:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list in).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.8 MiB      0.1 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list out).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.8 MiB     23.8 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.8 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Starting measurements: mem python var-algs 3-gram, variable-length fields, padding 10 000 lines

MEMORY USAGE

Product:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.4 MiB     23.4 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.5 MiB      0.1 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.5 MiB     23.5 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.5 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct2:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.5 MiB     23.5 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.5 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Recursive:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.5 MiB     23.5 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.5 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list in).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.5 MiB     23.5 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.1 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list out).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.8 MiB      0.1 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Starting measurements: mem python var-algs 5-gram, fixed-length fields, padding 1 000 lines

MEMORY USAGE

Product:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.5 MiB     23.5 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.1 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct2:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Recursive:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list in).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.7 MiB      0.1 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list out).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.7 MiB     23.7 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.7 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Starting measurements: mem python var-algs 5-gram, variable-length fields, padding 1 000 lines

MEMORY USAGE

Product:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.5 MiB     23.5 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.6 MiB      0.1 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.6 MiB     23.6 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     24.0 MiB      0.4 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


CProduct2:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     24.0 MiB     24.0 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     24.1 MiB      0.1 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Recursive:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     24.1 MiB     24.1 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     24.1 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list in).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     24.1 MiB     24.1 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     24.1 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter (list out).:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     24.1 MiB     24.1 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     24.2 MiB      0.1 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Starting measurements: mem python fix-algs 3-gram, fixed-length fields, padding 10 000 lines

MEMORY USAGE

Iter. fixed:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.4 MiB     23.4 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.8 MiB      0.4 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter. fixed2:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.8 MiB     23.8 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.8 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Starting measurements: mem python fix-algs 5-gram, fixed-length fields, padding 1 000 lines

MEMORY USAGE

Iter. fixed:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.5 MiB     23.5 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.9 MiB      0.4 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


Iter. fixed2:
Filename: /home/dlazesz/PycharmProjects/mosaic-n-gram-benchmark/ngram.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   188     23.9 MiB     23.9 MiB           1   @memory_profile
   189                                         def mem(inp, out, n, no_of_elems, fun, tim_fun):
   190     23.9 MiB      0.0 MiB           1       tim_fun(inp, out, n, no_of_elems, fun)


